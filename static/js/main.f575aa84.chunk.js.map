{"version":3,"sources":["components/Header/Header.jsx","components/Card/Card.jsx","App.jsx","index.js"],"names":["styles","headerContainerStyle","display","justifyContent","alignItems","h1Style","margin","h2Style","fontSize","scoresStyle","Header","props","react_default","a","createElement","PageHeader","style","message","className","score","topScore","cardStyle","borderRadius","background","height","position","width","textAlign","boxShadow","imgContainerStyle","overflow","imgStyle","Card","onClick","handleClick","id","alt","name","src","image","App","state","cards","clickedCards","_this","indexOf","handleScore","setState","concat","handleReset","handleShuffle","shuffledCards","array","i","length","j","Math","floor","random","_ref","shuffleCard","newScore","console","log","_this2","this","components_Header_Header","map","card","components_Card_Card","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f575aa84.chunk.js","sourcesContent":["import React from 'react';\r\nimport { PageHeader } from 'react-bootstrap';\r\n\r\nconst Header = props => ( \r\n    <PageHeader>\r\n        <div style={styles.headerContainerStyle}>\r\n            <div>\r\n                <h1 style={styles.h1Style}>Clicky Game!</h1>\r\n            </div>\r\n            <div>\r\n                <h2>{props.message}</h2>\r\n            </div>\r\n            <div className=\"scores\">\r\n                <h2 style={styles.h2Style}>Score: {props.score}</h2>\r\n                <h2 style={styles.h2Style}>Top Score: {props.topScore}</h2>\r\n            </div>\r\n        </div>\r\n    </PageHeader>\r\n)\r\n\r\nconst styles = {\r\n    headerContainerStyle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\"\r\n    },\r\n    h1Style: {\r\n        margin: 0\r\n    },\r\n    h2Style: {\r\n        margin: 0,\r\n        fontSize: 20\r\n    },\r\n    scoresStyle: {\r\n        fontSize: 20\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Card = props => (\r\n    <div className=\"card\" style={styles.cardStyle} onClick={() => props.handleClick(props.id)}>\r\n        <div className=\"img-container\" style={styles.imgContainerStyle}>\r\n            <img alt={props.name} src={props.image} style={styles.imgStyle} />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst styles = {\r\n    cardStyle: {\r\n        borderRadius: 10,\r\n        background: \"white\",\r\n        height: 200,\r\n        margin: 10,\r\n        position: \"relative\",\r\n        width: 200,\r\n        textAlign: \"center\",\r\n        boxShadow: \"0 3px 6px #333, 0 3px 6px #333\"\r\n    },\r\n    imgContainerStyle: {\r\n        borderRadius: 10,\r\n        height: 200,\r\n        overflow: \"hidden\",\r\n        textAlign: \"center\",\r\n        background:\"#4682b4\",\r\n    },\r\n    imgStyle: {\r\n        width: \"60%\"\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Card from './components/Card/Card';\nimport cards from './cards.json';\n\nimport './App.css';\n\n\nfunction shuffleCard(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nexport default class App extends Component {\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    clickedCards: [],\n    message: \"\"\n  }\n\n  handleClick = id => {\n    if (this.state.clickedCards.indexOf(id) === -1) {\n      this.handleScore();\n      this.setState({\n        clickedCards: this.state.clickedCards.concat(id)\n      });\n    } else {\n      this.handleReset();\n    }\n  }\n\n  handleShuffle = () => {\n    let shuffledCards = shuffleCard(cards);\n    this.setState({\n      cards: shuffledCards\n    });\n  }\n\n  handleScore = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      message: \"\"\n    });\n    if (newScore > this.state.topScore) {\n      this.setState({\n        topScore: newScore\n      });\n    } else if (newScore === 12) {\n      // this.setState({\n      //   message: \"You've Won\"\n      // });\n      console.log(\"test\");\n    }\n    this.handleShuffle();\n  }\n  \n  handleReset = () => {\n    this.setState({\n      score: 0,\n      topScore: this.state.topScore,\n      clickedCards: []\n    });\n    this.handleShuffle();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} topScore={this.state.topScore} message={this.state.message} />\n        <div className=\"card-wrapper\">\n          {this.state.cards.map(card => (\n            <Card\n              id={card.id}\n              key={card.id}\n              name={card.name}\n              handleClick={this.handleClick}\n              handleShuffle={this.handleShuffle}\n              handleScore={this.handleScore}\n              handleReset={this.handleReset}\n              image={card.image}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}